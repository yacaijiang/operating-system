使用应用级并发的应用程序称为并发程序；
基本的构造并发程序的方法：
进程：
I/O多路复用：
线程：

基于进程的并发编程
共享文件表，但是有独立的地址空间

基于I/O多路复用的并发编程

select函数：
#include<sys/select.h>
int select(int n, fd_set *fdset,NULL,NULL,NULL);
//返回：已准备好的描述符的非0个数，出错-1

FD_ZERO(fd_set *fdset);//清空fdset
FD_CLR(int fd,fd_set *fdset);//清除fd bit的fdset
FD_SET(int fd,fd_set *fdset);//打开fd bit的fdset
FD_ISSET(int fd,fd_set *fdset);//是否含有fd bit的fdset

fd_set的集合：又叫做描述符集合。
select函数有两个输入：
称为读集合的描述符集合fdset和该读集合的基数n（实际为任何描述符集合的最大基数）。
select函数会一直阻塞直到读集合中至少有一个描述符准备好可以读。当且仅当一个从该描述符读取一个字节的请求不会阻塞时，描述符k就表示准备好可以读了。
副作用：修改参数fdset指向fd_set，指明读集合的一个子集，称为准备好集合。
必须在每次调用select时更新读集合

状态机：一组状态、输入事件和转移，
转移是将状态和输入事件映射到状态。
每个转移是将一个（输入状态、输入事件）对映射到一个输出状态。

自循环：同一输入和输出状态之间的转移。

通常画成有向图，节点表示状态，有向弧表示转移，弧上标号表示输入事件。


基于线程的并发编程
Posix线程 Pthreads 是c中处理线程的一个标准接口

进度图、安全轨迹（共享变量的互斥访问）

信号量，解决同步不同执行线程问题的方法 P,V